inline
fn GETBIT_u32(stack u32 x, stack u8 bit_idx, stack u8 t) -> stack u8 {

	stack u8[4] aux;
	stack u8 res;

	aux[u32 0] = ((x >> (bit_idx)) & 0x01);
	
	t = aux[3];

	return t;	
}

inline
fn getBits(stack u8[12] array_r, stack u8[12] array_c, stack u8 i, stack u8 idx0, stack u8 idx1) -> stack u8, stack u8, stack u8 {

	stack u8 t0, t1, t2;
	stack u32 word0, word1, word2;

	t0 = 0;
	t1 = 0;
	t2 = 0;

	word0 = array_r[u32 (int)idx0];
	word1 = array_c[u32 (int)idx1];
	word2 = array_r[u32 (int)idx1];


	t0 = GETBIT_u32(word0, i, t0);
	t1 = GETBIT_u32(word1, i, t1);
	t2 = GETBIT_u32(word2, i, t2);

	return t0, t1, t2;
}


export 
fn test(){

	stack u8[12] array_r, array_c;
	stack u8 i, idx0, idx1;
	stack u8 res0, res1, res2;


	res0, res1, res2 = getBits(array_r, array_c, i, idx0, idx1);

}