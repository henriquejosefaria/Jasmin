fn mpc_xor_hHa(reg u8[60] hHa, reg u8[12] y, reg u8[12] z, reg u8 pos_hHa) -> reg u8[12] {
	
	inline int i;

	for i=0 to 4{
		
		z[i] = hHa[(int)pos_hHa * 4 + i] ^ y[(int)i];
		z[4 + i] = hHa[20 + (int)pos_hHa * 4 + i] ^ y[4 + i];
		z[8 + i] = hHa[40 + (int)pos_hHa * 4 + i] ^ y[8 + i];
		
	}
	
	return z;

}


export 
fn test(){

	reg u8[12] y, z;
	reg u8[60] hHa;
	reg u8 pos_hHa;

	pos_hHa = 0;

	z = mpc_xor_hHa(hHa, y, z, pos_hHa);
}