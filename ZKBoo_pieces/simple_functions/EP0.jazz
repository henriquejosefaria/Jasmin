fn ROTRIGHT_ep(reg u32 a, reg u8 b, reg u32 res) -> stack u32 {

	a = ((a >> b) | (a << (32 - b)));
	res ^= a;

	return res;
}

fn EP0(stack u8[4] x, reg u32 res) -> reg u32{

	reg u32 aux, aux0, aux1, aux2;
	reg u8 b;

	aux = x[u32 0];

	res = 0;
	b = 2;
	res = ROTRIGHT_ep(aux,b,res);

	b = 13;
	res = ROTRIGHT_ep(aux,b,res);

	b = 22;
	res = ROTRIGHT_ep(aux,b,res);

	return res;
}

export 
fn test(){

	stack u8[4] x;
	reg u32 res;

	
	res = EP0(x, res);
}